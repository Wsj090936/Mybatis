<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 命名空间要和mapper类一致 -->
<mapper namespace="mapper.OrdersMapper">
	<!-- 利用resultType进行查询 -->
	<select id="findOrdersAndUser" resultType="domain.OrdersExt">
		SELECT
		orders.`id`,
		orders.`user_id`,
		orders.`number`,
		user.`username`,
		user.`sex`
		FROM
		USER,
		orders
		WHERE orders.`user_id` = user.`id`;
	</select>
	<!-- 利用resultMap进行查询 -->
	<resultMap type="domain.OrdersExt" id="OrdersAndUserMap">
		<id column="id" property="id" />
		<result column="number" property="number" />
		<result column="user_id" property="userId" />
		<!--asspciation 一对一映射 property属性:关联查询时的结果映射的扩展类中的对象属性 -->
		<association property="user" javaType="domain.User">
			<id column="user_id" property="id" /><!-- 映射user中的id -->
			<result column="username" property="username" /><!-- 映射user中的username -->
			<result column="sex" property="sex" />
		</association>
	</resultMap>
	<select id="findOrdersAndUserMap" resultMap="OrdersAndUserMap">
		SELECT
		orders.`id`,
		orders.`user_id`,
		orders.`number`,
		user.`username`,
		user.`sex`
		FROM
		USER,
		orders
		WHERE orders.`user_id` = user.`id`;
	</select>
	<!-- 多对多映射的查询 -->
	<!-- resultMap标签中的extends属性可以用来继承其他resultMap，要求这两个resultMap的类型相同 -->
	<resultMap type="domain.OrdersExt" id="OrdersAndUserWithDetail"
		extends="OrdersAndUserMap">
		<!-- 用户信息和订单信息已经继承过来 -->
		<!-- 订单明细 -->
		<!-- collection标签用来配置一对多关系 ofType:扩展类中的集合中的类型(集合中存放的是一对多中 多的那方) -->
		<collection property="detailList" ofType="domain.Orderdetail">
			<id column="detailId" property="id" /><!-- 和一对一中的配置类似 -->
			<result column="items_id" property="itemsId" />
			<result column="items_num" property="itemsNum" />
		</collection>
	</resultMap>
	<select id="findOrdersAndUserWithDetail" resultMap="OrdersAndUserWithDetail">
		SELECT
			orders.`id`,
			orders.`user_id`,
			orders.`number`,
			user.`username`,
			user.`sex`,
			orderdetail.`id` detailId,
			orderdetail.`items_id`,
			orderdetail.`items_num`
		FROM
			USER,
			orders,
			orderdetail
		WHERE orders.`user_id` = user.`id` AND orders.`id` =
			orderdetail.`orders_id`;
	</select>
	<!-- 多对多查询 -->
	<resultMap type="domain.User" id="UserAndInformation">
		<!-- 用户信息 -->
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
		<!-- 订单信息(一对多) -->
			<collection property="ordersList" ofType="domain.Orders">
				<id column="id" property="id"/>
				<result column="user_id" property="userId"/>
				<result column="number" property="number"/>
				<!-- 订单明细(一对多) -->
				<collection property="orderdetailList" ofType="domain.Orderdetail">
					<id column="detailId" property="id"/>
					<result column="items_id" property="itemsId"/>
					<result column="items_num" property="itemsNum"/>
					<!-- 商品信息(一对一) -->
					<association property="items" javaType="domain.Items">
						<id column="items_id" property="id"/>
						<result column="name" property="name"/>
						<result column="price" property="price"/>
					</association>
				</collection>
			</collection>
	</resultMap>
	<select id="findUserAndInformation" resultMap="UserAndInformation">
		SELECT
			orders.`id`,
			orders.`user_id`,
			orders.`number`,
			user.`username`,
			user.`sex`,
			orderdetail.`id` detailId,
			orderdetail.`items_id`,
			orderdetail.`items_num`,
			items.`name`,
			items.`price`
		FROM
			USER,
			orders,
			orderdetail,
			items
		WHERE orders.`user_id` = user.`id`
			AND orders.`id` = orderdetail.`orders_id`
			AND orderdetail.`items_id` = items.`id`;
	</select>
	<!-- 延迟加载 -->
	<resultMap type="domain.OrdersExt" id="LazingLoadingMap">
		<id column="id" property="id"/>
		<result column="number" property="number"/>
		<!-- association中的
			select属性：关联查询的statement的id，可从其他文件中获取
			column属性：表示查询出的结果中的某一列的列名，将该列中的属性作为参数传入关联查询的statement中
		 -->
		<association property="user" select="mapper.UserMapper.findUserById" column="user_id"></association>
	</resultMap>
	<select id="findOrdersAndUserByLazyLoading" resultMap="LazingLoadingMap">
		SELECT
			*
		FROM
			orders
	</select>
</mapper>